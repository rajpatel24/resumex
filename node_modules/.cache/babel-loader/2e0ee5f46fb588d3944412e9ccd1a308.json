{"ast":null,"code":"var _jsxFileName = \"/home/raj/Desktop/resumeX/resumeX/src/components/_dashboard/app/AppTasks.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { Box, Card, Checkbox, CardHeader, Typography, FormControlLabel, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TASKS = ['Create FireStone Logo', 'Add SCSS and JS files if required', 'Stakeholder Meeting', 'Scoping & Estimations', 'Sprint Showcase'];\n\n// ----------------------------------------------------------------------\n\nTaskItem.propTypes = {\n  task: PropTypes.string,\n  checked: PropTypes.bool,\n  formik: PropTypes.object\n};\nfunction TaskItem(_ref) {\n  let {\n    task,\n    checked,\n    formik,\n    ...other\n  } = _ref;\n  const {\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    justifyContent: \"space-between\",\n    sx: {\n      py: 0.75\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        ...getFieldProps('checked'),\n        value: task,\n        checked: checked,\n        ...other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          ...(checked && {\n            color: 'text.disabled',\n            textDecoration: 'line-through'\n          })\n        },\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskItem;\nexport default function AppTasks() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      checked: [TASKS[2]]\n    },\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  const {\n    values,\n    handleSubmit\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 3,\n        py: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: TASKS.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task,\n            formik: formik,\n            checked: values.checked.includes(task)\n          }, task, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(AppTasks, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c2 = AppTasks;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskItem\");\n$RefreshReg$(_c2, \"AppTasks\");","map":{"version":3,"names":["PropTypes","Form","FormikProvider","useFormik","Box","Card","Checkbox","CardHeader","Typography","FormControlLabel","Stack","jsxDEV","_jsxDEV","TASKS","TaskItem","propTypes","task","string","checked","bool","formik","object","_ref","other","getFieldProps","direction","justifyContent","sx","py","children","control","value","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","color","textDecoration","_c","AppTasks","_s","initialValues","onSubmit","values","console","log","handleSubmit","title","px","autoComplete","noValidate","map","includes","_c2","$RefreshReg$"],"sources":["/home/raj/Desktop/resumeX/resumeX/src/components/_dashboard/app/AppTasks.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport {\n  Box,\n  Card,\n  Checkbox,\n  CardHeader,\n  Typography,\n  FormControlLabel,\n  Stack\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst TASKS = [\n  'Create FireStone Logo',\n  'Add SCSS and JS files if required',\n  'Stakeholder Meeting',\n  'Scoping & Estimations',\n  'Sprint Showcase'\n];\n\n// ----------------------------------------------------------------------\n\nTaskItem.propTypes = {\n  task: PropTypes.string,\n  checked: PropTypes.bool,\n  formik: PropTypes.object\n};\n\nfunction TaskItem({ task, checked, formik, ...other }) {\n  const { getFieldProps } = formik;\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\" sx={{ py: 0.75 }}>\n      <FormControlLabel\n        control={\n          <Checkbox {...getFieldProps('checked')} value={task} checked={checked} {...other} />\n        }\n        label={\n          <Typography\n            variant=\"body2\"\n            sx={{\n              ...(checked && {\n                color: 'text.disabled',\n                textDecoration: 'line-through'\n              })\n            }}\n          >\n            {task}\n          </Typography>\n        }\n      />\n    </Stack>\n  );\n}\n\nexport default function AppTasks() {\n  const formik = useFormik({\n    initialValues: {\n      checked: [TASKS[2]]\n    },\n    onSubmit: (values) => {\n      console.log(values);\n    }\n  });\n\n  const { values, handleSubmit } = formik;\n\n  return (\n    <Card>\n      <CardHeader title=\"Tasks\" />\n      <Box sx={{ px: 3, py: 1 }}>\n        <FormikProvider value={formik}>\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n            {TASKS.map((task) => (\n              <TaskItem\n                key={task}\n                task={task}\n                formik={formik}\n                checked={values.checked.includes(task)}\n              />\n            ))}\n          </Form>\n        </FormikProvider>\n      </Box>\n    </Card>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}