{"ast":null,"code":"var _jsxFileName = \"/home/raj/Desktop/resumeX/resumeX/src/components/EmployeeDashboard/pages/InterviewListDialog.js\",\n  _s = $RefreshSig$();\nimport Page from '../../Page';\nimport React, { useState } from \"react\";\nimport { Container } from '@mui/material';\nimport MUIDataTable from \"mui-datatables\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { TableRow, TableCell, TableFooter } from \"@mui/material\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MUIDataTable: {\n      styleOverrides: {\n        root: {\n          backgroundColor: '#red'\n        },\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    },\n    MuiToolbar: {\n      styleOverrides: {\n        root: {\n          // backgroundColor: 'yellow',\n        },\n        iconActive: {\n          display: 'none'\n        }\n      }\n    },\n    MuiTableCell: {\n      styleOverrides: {\n        head: {\n          backgroundColor: 'purple'\n        }\n      }\n    },\n    MUIDataTableHeadCell: {\n      styleOverrides: {\n        root: {\n          fontWeight: '700'\n        },\n        data: {\n          fontWeight: '700'\n        }\n      }\n    },\n    MUIDataTableSelectCell: {\n      styleOverrides: {\n        headerCell: {\n          // backgroundColor: 'blue',\n          fontWeight: '500px'\n        }\n      }\n    },\n    MuiTableFooter: {\n      styleOverrides: {\n        root: {\n          '& .MuiToolbar-root': {\n            //   backgroundColor: 'purple',\n          }\n        }\n      }\n    }\n  }\n});\nexport default function InterviewListDialog(data) {\n  _s();\n  var _data$data;\n  const navigate = useNavigate();\n  const [rowClickData, setRowClickData] = useState([]);\n  const handleOnRowClick = rowData => {\n    navigate(\"/employee-dashboard/booked-interview/candidate-interview\", {\n      state: {\n        id: rowData[0],\n        jobApplicationId: rowData[1]\n      }\n    });\n  };\n  const options = {\n    selectableRows: false,\n    filter: false,\n    print: false,\n    download: false,\n    responsive: \"standard\",\n    fixedHeader: true,\n    fixedSelectColumn: false,\n    viewColumns: false,\n    customFooter: (count, page, rowsPerPage, changeRowsPerPage, changePage) => {\n      return /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" Total: \\xA0 \", count, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this);\n    },\n    onRowClick: rowData => {\n      handleOnRowClick(rowData);\n    }\n  };\n  const columns = [{\n    name: \"Interview ID\",\n    options: {\n      filter: false,\n      display: false\n    }\n  }, {\n    name: \"Job Application ID\",\n    options: {\n      filter: false,\n      display: false\n    }\n  }, {\n    name: \"RRF Number\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Candidate Name\",\n    options: {\n      filter: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          style: {\n            textDecoration: 'none',\n            color: '#00AB55',\n            fontWeight: 'bold'\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this);\n      }\n    }\n  }, {\n    name: \"Interview Round\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Email\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Phone Number\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Interview DateTime\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Round Status\",\n    options: {\n      filter: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        return value === 'CONFIRMED' ? /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 89\n        }, this);\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Home | ResumeX\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n          data: (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.map(data => {\n            return [data.id, data.jobApplicationId, data.rrfNumber, data.candidateName, data.interviewRound, data.candidateEmail, data.candidatePhoneNumber, new Date(data.start).toLocaleDateString() + \" | \" + new Date(data.start).toLocaleTimeString().substring(0, 5), data.status];\n          }),\n          columns: columns,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n_s(InterviewListDialog, \"NuGPIsyINYHQDHhj5aayaITDF+0=\", false, function () {\n  return [useNavigate];\n});\n_c = InterviewListDialog;\nvar _c;\n$RefreshReg$(_c, \"InterviewListDialog\");","map":{"version":3,"names":["Page","React","useState","Container","MUIDataTable","createTheme","ThemeProvider","TableRow","TableCell","TableFooter","useNavigate","jsxDEV","_jsxDEV","theme","components","styleOverrides","root","backgroundColor","paper","boxShadow","MuiToolbar","iconActive","display","MuiTableCell","head","MUIDataTableHeadCell","fontWeight","data","MUIDataTableSelectCell","headerCell","MuiTableFooter","InterviewListDialog","_s","_data$data","navigate","rowClickData","setRowClickData","handleOnRowClick","rowData","state","id","jobApplicationId","options","selectableRows","filter","print","download","responsive","fixedHeader","fixedSelectColumn","viewColumns","customFooter","count","page","rowsPerPage","changeRowsPerPage","changePage","children","fileName","_jsxFileName","lineNumber","columnNumber","onRowClick","columns","name","customBodyRender","value","tableMeta","updateValue","href","style","textDecoration","color","title","maxWidth","map","rrfNumber","candidateName","interviewRound","candidateEmail","candidatePhoneNumber","Date","start","toLocaleDateString","toLocaleTimeString","substring","status","_c","$RefreshReg$"],"sources":["/home/raj/Desktop/resumeX/resumeX/src/components/EmployeeDashboard/pages/InterviewListDialog.js"],"sourcesContent":["import Page from '../../Page';\nimport React, { useState } from \"react\";\nimport {Container} from '@mui/material';\nimport MUIDataTable from \"mui-datatables\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport {\n    TableRow,\n    TableCell,\n    TableFooter\n  } from \"@mui/material\";\n  import { useNavigate } from 'react-router-dom';\n\n\nconst theme = createTheme({\n    components: {\n        MUIDataTable: {\n        styleOverrides: {\n            root: {\n            backgroundColor: '#red',\n            },\n            paper: {\n            boxShadow: 'none',\n            },\n        },\n        },\n        MuiToolbar: {\n        styleOverrides: {\n            root: {\n            // backgroundColor: 'yellow',\n            },\n        iconActive: {\n                display: 'none',\n            },\n        },\n        },\n        MuiTableCell: {\n        styleOverrides: {\n            head: {\n            backgroundColor: 'purple',\n            },\n        },\n        },\n        MUIDataTableHeadCell: {\n            styleOverrides: {\n                root: {\n                    fontWeight: '700',\n                },\n                data: {\n                fontWeight: '700',\n                }\n            }\n        },\n        MUIDataTableSelectCell: {\n        styleOverrides: {\n            headerCell: {\n            // backgroundColor: 'blue',\n            fontWeight: '500px'\n            },\n        },\n        },\n        MuiTableFooter: {\n        styleOverrides: {\n            root: {\n            '& .MuiToolbar-root': {\n            //   backgroundColor: 'purple',\n            },\n            },\n        },\n        },\n    },\n});\n\nexport default function InterviewListDialog(data) {\n    const navigate = useNavigate();\n\n    const [rowClickData, setRowClickData] = useState([])\n\n    const handleOnRowClick = (rowData) => {\n        navigate(\"/employee-dashboard/booked-interview/candidate-interview\", {state:{\n            id: rowData[0],\n            jobApplicationId: rowData[1]\n        }})\n    } \n\n    const options = {\n        selectableRows: false,\n        filter: false,\n        print: false,\n        download: false,\n        responsive: \"standard\",\n        fixedHeader: true,\n        fixedSelectColumn: false,\n        viewColumns: false,\n        customFooter: (\n            count,\n            page,\n            rowsPerPage,\n            changeRowsPerPage,\n            changePage\n          ) => {\n            return(\n                <TableFooter>\n                <TableRow>\n                  <TableCell> <b> Total: &nbsp; {count} </b></TableCell>\n                </TableRow>\n              </TableFooter>\n            );\n          },\n        onRowClick: (rowData) => {handleOnRowClick(rowData)},\n    };\n    \n    const columns = [\n        {\n            name: \"Interview ID\",\n            options: {\n                filter: false,\n                display:false\n            },\n        },\n        {\n            name: \"Job Application ID\",\n            options: {\n                filter: false,\n                display:false\n            },\n        },\n        {\n            name: \"RRF Number\",\n            options: {\n                filter: true,\n            },\n        },\n        {\n            name: \"Candidate Name\",\n            options: {\n                filter: true,\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    return (\n                        <a href=\"\" style={{textDecoration: 'none', color: '#00AB55', fontWeight: 'bold'}}>{value}</a>\n                    )\n                }\n            }\n        },\n        {\n            name: \"Interview Round\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n            name: \"Email\",\n            options: {\n                filter: true\n            }\n        },\n        {\n            name: \"Phone Number\",\n            options: {\n                filter: true\n            }\n        },\n        {\n            name: \"Interview DateTime\",\n            options: {\n                filter: true\n            }\n        },\n        {\n            name: \"Round Status\",\n            options: {\n                filter: true,\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    return (\n                       value === 'CONFIRMED' ?  <b style={{color: 'red'}}>Pending</b> : <b style={{color: 'green'}}>Completed</b> \n                    )\n                }\n            }\n        }\n             \n    ];\n\n    return (\n        <Page title=\"Home | ResumeX\">\n            <Container maxWidth=\"xl\">\n\n            <ThemeProvider theme={theme}>\n                <MUIDataTable\n                    data={data.data?.map(data => {\n                        return [\n                            data.id,\n                            data.jobApplicationId,\n                            data.rrfNumber,\n                            data.candidateName,\n                            data.interviewRound,\n                            data.candidateEmail,\n                            data.candidatePhoneNumber,\n                            new Date(data.start).toLocaleDateString() + \" | \" + new Date(data.start).toLocaleTimeString().substring(0, 5) ,\n                            data.status\n                        ]\n                    })}\n                    columns={columns}\n                    options={options}\n                />\n            </ThemeProvider>\n            </Container>\n        </Page>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}