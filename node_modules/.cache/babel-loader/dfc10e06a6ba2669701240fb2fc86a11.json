{"ast":null,"code":"var _jsxFileName = \"/home/raj/Desktop/resumeX/resumeX/src/components/authentication/login/LoginForm.js\",\n  _s = $RefreshSig$();\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\n// material\nimport { Link, Stack, TextField, InputAdornment, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\nimport { apiInstance } from 'src/utils/apiAuth';\n\n// ----------------------------------------------------------------------\n\n// const apiInstance = axios.create({\n//   baseURL: 'http://127.0.0.1:8000/api/v1/auth/',\n//   timeout: 10000,\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const navigate = useNavigate();\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const LoginSchema = Yup.object().shape({\n    mobile_no: Yup.string().matches(phoneRegExp, 'Mobile Number is not valid').min(10, 'Mobile Number must be of 10 digit').max(10, 'Mobile Number must be of 10 digit').required('Mobile Number is required'),\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\")\n  });\n  const callSendOtpApi = (candEmail, candMobile) => {\n    apiInstance({\n      method: 'post',\n      url: '/auth/email/',\n      data: {\n        \"email\": candEmail,\n        \"mobile\": candMobile\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        enqueueSnackbar(response.data.detail, {\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          variant: 'success',\n          autoHideDuration: 3000\n        });\n        navigate('/verify-otp', {\n          replace: true\n        });\n      }\n    }).catch(function (error) {\n      enqueueSnackbar(\"User with this mobile already exist\", {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        variant: 'error',\n        autoHideDuration: 3000\n      });\n      setSubmitting(false);\n    });\n  };\n  const formik = useFormik({\n    initialValues: {\n      mobile_no: '',\n      email: '',\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: values => {\n      let candMobile = \"+91\" + values.mobile_no;\n      localStorage.setItem('candidateMN', candMobile);\n\n      //  callSendOtpApi(candMobile)\n\n      let candEmail = values.email;\n      localStorage.setItem('candEmail', candEmail);\n      callSendOtpApi(candEmail, candMobile);\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps,\n    setSubmitting\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoFocus: true,\n          type: \"text\",\n          label: \"Email\",\n          ...getFieldProps('email'),\n          // InputProps={{\n          //   startAdornment: <InputAdornment position=\"start\">\n          //     +91\n          //     </InputAdornment>,\n          // }}\n\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        type: \"text\",\n        label: \"Mobile Number\",\n        ...getFieldProps('mobile_no'),\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"+91\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 31\n          }, this)\n        },\n        error: Boolean(touched.mobile_no && errors.mobile_no),\n        helperText: touched.mobile_no && errors.mobile_no\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"i3cOO1ZR0XlFyvP2wG5UcBPWvfk=\", false, function () {\n  return [useSnackbar, useNavigate, useFormik];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Yup","useState","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","Stack","TextField","InputAdornment","FormControlLabel","LoadingButton","axios","useSnackbar","apiInstance","jsxDEV","_jsxDEV","LoginForm","_s","enqueueSnackbar","navigate","phoneRegExp","LoginSchema","object","shape","mobile_no","string","matches","min","max","required","email","callSendOtpApi","candEmail","candMobile","method","url","data","then","response","status","detail","anchorOrigin","vertical","horizontal","variant","autoHideDuration","replace","catch","error","setSubmitting","formik","initialValues","remember","validationSchema","onSubmit","values","localStorage","setItem","errors","touched","isSubmitting","handleSubmit","getFieldProps","value","children","autoComplete","noValidate","spacing","fullWidth","autoFocus","type","label","Boolean","helperText","fileName","_jsxFileName","lineNumber","columnNumber","direction","alignItems","justifyContent","sx","my","InputProps","startAdornment","position","size","loading","_c","$RefreshReg$"],"sources":["/home/raj/Desktop/resumeX/resumeX/src/components/authentication/login/LoginForm.js"],"sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\n// material\nimport {\n  Link,\n  Stack,\n  TextField,\n  InputAdornment,\n  FormControlLabel\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport axios from 'axios';\nimport {useSnackbar} from 'notistack'\nimport { apiInstance } from 'src/utils/apiAuth';\n\n\n// ----------------------------------------------------------------------\n\n\n// const apiInstance = axios.create({\n//   baseURL: 'http://127.0.0.1:8000/api/v1/auth/',\n//   timeout: 10000,\n// });\n\n\nexport default function LoginForm() { \n  const { enqueueSnackbar } = useSnackbar(); \n\n  const navigate = useNavigate();\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\n  const LoginSchema = Yup.object().shape({\n    mobile_no: Yup.string().matches(phoneRegExp, 'Mobile Number is not valid').min(10, 'Mobile Number must be of 10 digit').max(10, 'Mobile Number must be of 10 digit').required('Mobile Number is required'),\n    email: Yup.string()\n    .email(\"Email must be a valid email address\")\n    .required(\"Email is required\"),\n    });\n  \n  const callSendOtpApi = (candEmail, candMobile) => {  \n    apiInstance({\n      method: 'post',\n      url: '/auth/email/',\n      data: {\n        \"email\": candEmail,\n        \"mobile\": candMobile\n      }  \n    }).then(function (response) {\n  \n      if (response.status === 200) {\n\n        enqueueSnackbar(response.data.detail, {\n          anchorOrigin: {\n                            vertical: 'top',\n                            horizontal: 'right',\n                        },\n            variant: 'success',\n            autoHideDuration: 3000,\n\n          });\n          navigate('/verify-otp', { replace: true });\n      }\n      \n    })\n    .catch(function (error) {\n      enqueueSnackbar(\"User with this mobile already exist\", {\n        anchorOrigin: {\n                          vertical: 'top',\n                          horizontal: 'right',\n                      },\n          variant: 'error',\n          autoHideDuration: 3000,  \n        });\n\n        setSubmitting(false)\n    });   \n  \n  }   \n\n  const formik = useFormik({\n    initialValues: {\n      mobile_no: '',\n      email: '',\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values) => {  \n\n      let candMobile = \"+91\" + values.mobile_no\n      localStorage.setItem('candidateMN', candMobile);\n     \n      //  callSendOtpApi(candMobile)\n\n       let candEmail = values.email\n       localStorage.setItem('candEmail', candEmail)\n\n       callSendOtpApi(candEmail, candMobile)\n    }\n  }); \n      \n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps, setSubmitting } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            autoFocus={true}\n            type=\"text\"\n            label=\"Email\"\n            \n            {...getFieldProps('email')}\n            \n            // InputProps={{\n            //   startAdornment: <InputAdornment position=\"start\">\n            //     +91\n            //     </InputAdornment>,\n            // }}\n            \n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n          \n        </Stack>\n        \n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}/>\n        <TextField\n            fullWidth\n            type=\"text\"\n            label=\"Mobile Number\"\n            \n            {...getFieldProps('mobile_no')}\n            \n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\">\n                +91\n                </InputAdornment>,\n            }}\n            \n            error={Boolean(touched.mobile_no && errors.mobile_no)}\n            helperText={touched.mobile_no && errors.mobile_no}\n          />\n\n       <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}/>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          Send OTP\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}